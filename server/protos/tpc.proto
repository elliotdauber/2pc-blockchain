// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.tpc";
option java_outer_classname = "TPCProto";
option objc_class_prefix = "TPC";

package tpc;

// The coordinator service definition.
service Coordinator {
  // Receives work in the coordinator and sends it to the nodes
  rpc SendWork (WorkRequest) returns (WorkResponse) {}
}

//The node service definition
service Node {
  // Receives work in the node
  rpc ReceiveWork (WorkRequest) returns (WorkResponse) {}
}

service XNode {
    rpc SendWork (WorkRequest) returns (WorkResponse) {}
    rpc ReceiveWork (WorkRequest) returns (WorkResponse) {}
    rpc JoinSys (JoinRequest) returns (JoinRequest) {}
    rpc LeaveSys (LeaveRequest) returns (LeaveResponse) {}
}

message SQLTransaction {
    string pk = 1;
    string sql = 2;
}

// The request message containing the user's name.
message WorkRequest {
  repeated SQLTransaction work = 1;
  string address = 2;
  int32 timeout = 3;
}

// The response message containing the greetings
message WorkResponse {
  string address = 1;
  int32 timeout = 2;
  string error = 3;
}

message Node{
  int32 id = 1;
  string url = 2;
  optional string pk_range_low = 3;
  optional string pk_range_high = 3;
}

message JoinRequest{
  repeated Nodes nodes = 1;
}

message LeaveRequest{
  Node node = 1;
}

message LeaveResponse{
  bool removed = 1;
}